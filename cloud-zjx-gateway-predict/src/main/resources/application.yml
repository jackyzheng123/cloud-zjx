server:
  port: 8081

spring:
  application:
    name: cloud-zjx-gateway-predict
  profiles:
    active: query_route

#After Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: after_route  #router唯一的id
          uri: http://httpbin.org:80/get   #路由到指定URI
          predicates:
            - After=2017-01-20T17:42:47.789-07:00[America/Denver]   #当请求的时间在这个配置的时间之后，请求会被路由到配置URI，被AfterRoutePredicateFactory这个类所处理
  profiles: after_route

#Header Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: header_route
          uri: http://httpbin.org:80/get
          predicates:
            - Header=X-Request-Id, \d+  #当请求的Header中有X-Request-Id的header名，且header值为数字时，请求会被路由到配置的uri
  profiles: header_route

#Cookie Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: cookie_route
          uri: http://httpbin.org:80/get
          predicates:
            - Cookie=name, forezp #请求带有cookie名为name, cookie值为forezp 的请求将都会转发到uri
  profiles: cookie_route

#Host Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: host_route
          uri: http://httpbin.org:80/get
          predicates:
            - Host=**.fangzhipeng.com #请求头中含有Host为fangzhipeng.com的请求将会被路由转发转发到配置的uri
  profiles: host_route

#Method Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: method_route
          uri: http://httpbin.org:80/get
          predicates:
            - Method=GET  #所有的GET类型的请求都会路由转发到配置的uri
  profiles: method_route

#Path Route Predicate Factory
---
spring:
  cloud:
    gateway:
      routes:
        - id: path_route
          uri: http://httpbin.org:80/get
          predicates:
            - Path=/foo/{segment}  #所有的请求路径满足/foo/{segment}的请求将会匹配并被路由到配置URI
  profiles: path_route

---
spring:
  cloud:
    gateway:
      routes:
        - id: query_route
          uri: http://httpbin.org:80/get
          predicates:
            - Query=foo, ba.  #请求中含有参数foo，并且foo的值匹配ba.，则请求命中路由
  profiles: query_route